<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.walker.mapper.xml.SeriesMapper" >

	<insert id="insertSeries" parameterType="com.springmvc.walker.xml.entity.SeriesEntity">
		insert into t_vod_series(
			SERIES_ID,ORIGINAL_ID,CP_ID,IMPORT_SOURCE,EPISODE_TYPE,TYPE,TYPE_NAME,NAME,FULLSPELL,SIMPLESPELL,
			ALIAS_NAME,EN_NAME,LANGUAGE,CAPTION,RELEASE_TIME,AREA,PROGRAM_COUNT,NEW_PROGRAM,DIRECTOR,PRODUCER,
			ADAPTOR,ACTOR,AWARDS,DESCRIPTION,KEYWORDS,KIND,TAGS,CLARITY,COPYRIGHT,COPYRIGHT_DATE,CREATE_TIME,
			MODIFY_TIME,CDN_TIME,CDN_ID,STATUS,ONLINE_TIME,UNLINE_TIME,REAL_PROGRAM_COUNT,ONLINE_PROGRAM_COUNT,
			IS_LACK_PROGRAM,PLATFORM_ID
		)values(
			#{SERIES_ID},#{ORIGINAL_ID},#{CP_ID},#{IMPORT_SOURCE},#{EPISODE_TYPE},#{TYPE},#{TYPE_NAME},#{NAME},#{FULLSPELL},#{SIMPLESPELL},
			#{ALIAS_NAME},#{EN_NAME},#{LANGUAGE},#{CAPTION},#{RELEASE_TIME},#{AREA},#{PROGRAM_COUNT},#{NEW_PROGRAM},#{DIRECTOR},#{PRODUCER},
			#{ADAPTOR},#{ACTOR},#{AWARDS},#{DESCRIPTION},#{KEYWORDS},#{KIND},#{TAGS},#{CLARITY},#{COPYRIGHT},#{COPYRIGHT_DATE},#{CREATE_TIME},
			#{MODIFY_TIME},#{CDN_TIME},#{CDN_ID},#{STATUS},#{ONLINE_TIME},#{UNLINE_TIME},#{REAL_PROGRAM_COUNT},#{ONLINE_PROGRAM_COUNT},
			#{IS_LACK_PROGRAM},#{PLATFORM_ID}
		)
	</insert>
	
	<update id="updateSeries" parameterType="com.springmvc.walker.xml.entity.SeriesEntity">
		update t_vod_series
		set 
			<if test="ORIGINAL_ID != null">
				ORIGINAL_ID = #{ORIGINAL_ID},
			</if>
			<if test="CP_ID != null">
				CP_ID = #{CP_ID},
			</if>
			<if test="IMPORT_SOURCE != null">
				IMPORT_SOURCE = #{IMPORT_SOURCE},
			</if>
			<if test="EPISODE_TYPE != null">
				EPISODE_TYPE = #{EPISODE_TYPE},
			</if>
			<if test="TYPE != null">
				TYPE = #{TYPE},
			</if>
			<if test="TYPE_NAME != null">
				TYPE_NAME = #{TYPE_NAME},
			</if>
			<if test="NAME != null">
				NAME = #{NAME},
			</if>
			<if test="FULLSPELL != null">
				FULLSPELL = #{FULLSPELL},
			</if>
			<if test="SIMPLESPELL != null">
				SIMPLESPELL = #{SIMPLESPELL},
			</if>
			<if test="ALIAS_NAME != null">
				ALIAS_NAME = #{ALIAS_NAME},
			</if>
			<if test="EN_NAME != null">
				EN_NAME = #{EN_NAME},
			</if>
			<if test="LANGUAGE != null">
				LANGUAGE = #{LANGUAGE},
			</if>
			<if test="CAPTION != null">
				CAPTION = #{CAPTION},
			</if>
			<if test="RELEASE_TIME != null">
				RELEASE_TIME = #{RELEASE_TIME},
			</if>
			<if test="AREA != null">
				AREA = #{AREA},
			</if>
			<if test="PROGRAM_COUNT != null">
				PROGRAM_COUNT = #{PROGRAM_COUNT},
			</if>
			<if test="NEW_PROGRAM != null">
				NEW_PROGRAM = #{NEW_PROGRAM},
			</if>
			<if test="DIRECTOR != null">
				DIRECTOR = #{DIRECTOR},
			</if>
			<if test="PRODUCER != null">
				PRODUCER = #{PRODUCER},
			</if>
			<if test="ADAPTOR != null">
				ADAPTOR = #{ADAPTOR},
			</if>
			<if test="ACTOR != null">
				ACTOR = #{ACTOR},
			</if>
			<if test="AWARDS != null">
				AWARDS = #{AWARDS},
			</if>
			<if test="DESCRIPTION != null">
				DESCRIPTION = #{DESCRIPTION},
			</if>
			<if test="KEYWORDS != null">
				KEYWORDS = #{KEYWORDS},
			</if>
			<if test="KIND != null">
				KIND = #{KIND},
			</if>
			<if test="TAGS != null">
				TAGS = #{TAGS},
			</if>
			<if test="CLARITY != null">
				CLARITY = #{CLARITY},
			</if>
			<if test="COPYRIGHT != null">
				COPYRIGHT = #{COPYRIGHT},
			</if>
			<if test="COPYRIGHT_DATE != null">
				COPYRIGHT_DATE = #{COPYRIGHT_DATE},
			</if>
			<if test="CREATE_TIME != null">
				CREATE_TIME = #{CREATE_TIME},
			</if>
			<if test="CDN_TIME != null">
				CDN_TIME = #{CDN_TIME},
			</if>
			<if test="CDN_ID != null">
				CDN_ID = #{CDN_ID},
			</if>
			<if test="STATUS != null">
				STATUS = #{STATUS},
			</if>
			<if test="ONLINE_TIME != null">
				ONLINE_TIME = #{ONLINE_TIME},
			</if>
			<if test="UNLINE_TIME != null">
				UNLINE_TIME = #{UNLINE_TIME},
			</if>
			<if test="REAL_PROGRAM_COUNT != null">
				REAL_PROGRAM_COUNT = #{REAL_PROGRAM_COUNT},
			</if>
			<if test="ONLINE_PROGRAM_COUNT != null">
				ONLINE_PROGRAM_COUNT = #{ONLINE_PROGRAM_COUNT},
			</if>
			<if test="IS_LACK_PROGRAM != null">
				IS_LACK_PROGRAM = #{IS_LACK_PROGRAM},
			</if>
			<if test="PLATFORM_ID != null">
				PLATFORM_ID = #{PLATFORM_ID},
			</if>
			MODIFY_TIME = now()
		where
			SERIES_ID = #{SERIES_ID}
	</update>

	<update id="updateStatusById" parameterType="java.util.Map">
		update t_vod_series
		set
			STATUS = #{STATUS}
		where
			SERIES_ID = #{SERIES_ID}
	</update>
	
	<select id="getSeriesById" parameterType="java.lang.String" resultType="com.springmvc.walker.xml.entity.SeriesEntity">
		SELECT 
			SERIES_ID,ORIGINAL_ID,CP_ID,IMPORT_SOURCE,EPISODE_TYPE,TYPE,TYPE_NAME,NAME,FULLSPELL,SIMPLESPELL,
			ALIAS_NAME,EN_NAME,LANGUAGE,CAPTION,RELEASE_TIME,AREA,PROGRAM_COUNT,NEW_PROGRAM,DIRECTOR,PRODUCER,
			ADAPTOR,ACTOR,AWARDS,DESCRIPTION,KEYWORDS,KIND,TAGS,CLARITY,COPYRIGHT,
			date_format(COPYRIGHT_DATE, '%Y-%m-%d %H:%i:%s') COPYRIGHT_DATE,
			date_format(CREATE_TIME, '%Y-%m-%d %H:%i:%s') CREATE_TIME,
			date_format(MODIFY_TIME, '%Y-%m-%d %H:%i:%s') MODIFY_TIME,
			date_format(CDN_TIME, '%Y-%m-%d %H:%i:%s') CDN_TIME,CDN_ID,STATUS,
			date_format(ONLINE_TIME, '%Y-%m-%d %H:%i:%s') ONLINE_TIME,
			date_format(UNLINE_TIME, '%Y-%m-%d %H:%i:%s') UNLINE_TIME,REAL_PROGRAM_COUNT,ONLINE_PROGRAM_COUNT,
			IS_LACK_PROGRAM,PLATFORM_ID
	    FROM t_vod_series
	    WHERE SERIES_ID = #{SERIES_ID}
     </select>
     
     <select id="getSeriesByOriginalId" parameterType="java.lang.String" resultType="com.springmvc.walker.xml.entity.SeriesEntity">
		SELECT 
			SERIES_ID,ORIGINAL_ID,CP_ID,IMPORT_SOURCE,EPISODE_TYPE,TYPE,TYPE_NAME,NAME,FULLSPELL,SIMPLESPELL,
			ALIAS_NAME,EN_NAME,LANGUAGE,CAPTION,RELEASE_TIME,AREA,PROGRAM_COUNT,NEW_PROGRAM,DIRECTOR,PRODUCER,
			ADAPTOR,ACTOR,AWARDS,DESCRIPTION,KEYWORDS,KIND,TAGS,CLARITY,COPYRIGHT,
			date_format(COPYRIGHT_DATE, '%Y-%m-%d %H:%i:%s') COPYRIGHT_DATE,
			date_format(CREATE_TIME, '%Y-%m-%d %H:%i:%s') CREATE_TIME,
			date_format(MODIFY_TIME, '%Y-%m-%d %H:%i:%s') MODIFY_TIME,
			date_format(CDN_TIME, '%Y-%m-%d %H:%i:%s') CDN_TIME,CDN_ID,STATUS,
			date_format(ONLINE_TIME, '%Y-%m-%d %H:%i:%s') ONLINE_TIME,
			date_format(UNLINE_TIME, '%Y-%m-%d %H:%i:%s') UNLINE_TIME,REAL_PROGRAM_COUNT,ONLINE_PROGRAM_COUNT,
			IS_LACK_PROGRAM,PLATFORM_ID
	    FROM t_vod_series
	    WHERE ORIGINAL_ID = #{ORIGINAL_ID}
     </select>
     
     <select id="getPicturesBySeriesId" parameterType="java.lang.String" resultType="com.springmvc.walker.xml.entity.PictureEntity">
		SELECT 
			PICTURE_ID,
			ORIGINAL_ID,
			SERIES_ID,
			TYPE,
			FILE_URL,
			MD5,
			FILE_SIZE,
			RESLOUTION,
			STATUS,
			date_format(CREATE_TIME, '%Y-%m-%d %H:%i:%s') CREATE_TIME,
			PLATFORM_ID
	    FROM t_vod_picture
	    WHERE SERIES_ID = #{SERIES_ID}
	    	AND	STATUS = '01'
     </select>
     
     <select id="listCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT count(1)
        FROM t_vod_series
        WHERE	1=1
		<if test="SERIES_ID != null and SERIES_ID != ''">
               AND SERIES_ID = #{SERIES_ID}
        </if>
		<if test="NAME != null and NAME != ''">
               AND NAME LIKE #{NAME}
       	</if>
       	<if test="TYPE != null and TYPE != ''">
               AND TYPE = #{TYPE}
       	</if>
      	<if test="STATUS != null and STATUS != ''">
               AND STATUS = #{STATUS}
       	</if>
      	<if test="CDN_TIME != null and CDN_TIME != ''">
               AND CDN_TIME BETWEEN '${CDN_TIME} 00:00:00' AND '${CDN_TIME} 23:59:59'
       	</if>
	</select>
	
	<select id="getPageList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT s.SERIES_ID, s.ORIGINAL_ID, s.CP_ID, s.EPISODE_TYPE, s.TYPE, s.TYPE_NAME
			, s.NAME, s.FULLSPELL, s.SIMPLESPELL, s.ALIAS_NAME, s.EN_NAME, s.LANGUAGE
			, s.CAPTION, s.RELEASE_TIME, s.AREA, s.PROGRAM_COUNT, s.NEW_PROGRAM
			, s.DIRECTOR, s.PRODUCER, s.ADAPTOR, s.ACTOR, s.AWARDS, s.DESCRIPTION, s.KEYWORDS
			, s.KIND, s.TAGS, s.CLARITY, s.COPYRIGHT, s.COPYRIGHT_DATE, s.IMPORT_SOURCE
			, s.STATUS, s.CDN_ID
		    , date_format(s.CREATE_TIME, '%Y-%m-%d %H:%i:%s') CREATE_TIME
			, date_format(s.CDN_TIME, '%Y-%m-%d %H:%i:%s') CDN_TIME
			, date_format(s.ONLINE_TIME, '%Y-%m-%d %H:%i:%s') ONLINE_TIME
			, date_format(s.UNLINE_TIME, '%Y-%m-%d %H:%i:%s') UNLINE_TIME
		    , CASE WHEN s.REAL_PROGRAM_COUNT IS NULL THEN 0 ELSE s.REAL_PROGRAM_COUNT END REAL_PROGRAM_COUNT
		    , CASE WHEN s.ONLINE_PROGRAM_COUNT IS NULL THEN 0 ELSE s.ONLINE_PROGRAM_COUNT END ONLINE_PROGRAM_COUNT
		    , CASE WHEN s.IS_LACK_PROGRAM IS NULL THEN 0 ELSE s.IS_LACK_PROGRAM END IS_LACK_PROGRAM
		FROM t_vod_series s
        WHERE 	1=1
		<if test="SERIES_ID != null and SERIES_ID != ''">
               AND SERIES_ID = #{SERIES_ID}
        </if>
		<if test="NAME != null and NAME != ''">
               AND NAME LIKE #{NAME}
       	</if>
       	<if test="TYPE != null and TYPE != ''">
               AND TYPE = #{TYPE}
       	</if>
      	<if test="STATUS != null and STATUS != ''">
               AND STATUS = #{STATUS}
       	</if>
      	<if test="CDN_TIME != null and CDN_TIME != ''">
               AND CDN_TIME BETWEEN '${CDN_TIME} 00:00:00' AND '${CDN_TIME} 23:59:59'
       	</if>
		ORDER BY s.CREATE_TIME DESC
		LIMIT ${start},${limit}
	</select>
	
	<parameterMap id="procCheckProgramParameters" type="java.util.HashMap">
		<parameter property="PROGRAM_ID" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	
	<select id="proc_check_program" parameterMap="procCheckProgramParameters">
		{call proc_check_program(?)}
	</select>
	
	<select id="proc_init_media_check">
		{call proc_init_media_check()}
	</select>
	
	<parameterMap id="procCheckSeriesParameters" type="java.lang.String">
		<parameter property="SERIES_ID" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	
	<select id="proc_check_series" statementType="CALLABLE" parameterMap="procCheckSeriesParameters">
		{
			call proc_check_series(?)
		}
	</select>
</mapper>